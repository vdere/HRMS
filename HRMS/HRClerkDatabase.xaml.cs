using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Data.SqlClient;
using System.Data;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;
using HRMS.Entity;
using HRMS.Exceptions;
using HRMS.BL;

namespace HRMS
{
    /// <summary>
    /// Interaction logic for HRClerkDatabase.xaml
    /// </summary>
    public partial class HRClerkDatabase : Window
    {
        public HRClerkDatabase()
        {
            InitializeComponent();
        }

        //OnLoad Event
        private void Window_Loaded(object sender, RoutedEventArgs e)
        {
            textBox_Employee_Id.Text = EmployeeValidation.GetAutogeneratedEmployeeID_BL().ToString();
            textBox_Project_ID.Text = Project_BL.GetAutogeneratedProjectID_BL().ToString();
            textBox_Category_ID.Text = Category_BL.GetAutogeneratedCategoryID_BL().ToString();
            textBox_Skill_ID.Text = Skill_BL.GetAutogeneratedSkillID_BL().ToString();
            //Load Civil Status Data from Database
            DataTable dtCivil = EmployeeValidation.LoadCivilStatus_BL();
            if (dtCivil.Rows.Count >= 0)
            {
                cmb_Employee_CivilStatus.ItemsSource = dtCivil.DefaultView;

                cmb_Employee_CivilStatus.DisplayMemberPath = "Status_Description";
                cmb_Employee_CivilStatus.SelectedValuePath = "Status_Id";
            }

            //Load Level Data from Database
            DataTable dtLvl = EmployeeValidation.LoadLevel_BL();
            if (dtLvl.Rows.Count >= 0)
            {
                cmb_Employee_LevelID.ItemsSource = dtLvl.DefaultView;

                cmb_Employee_LevelID.DisplayMemberPath = "Level_Description";
                cmb_Employee_LevelID.SelectedValuePath = "Level_Id";
            }

            //Load Projects Data from Database
            DataTable dtProj = EmployeeValidation.LoadProject_BL();
            if (dtProj.Rows.Count >= 0)
            {
                cmb_Employee_ProjectID.ItemsSource = dtProj.DefaultView;

                cmb_Employee_ProjectID.DisplayMemberPath = "Project_Name";
                cmb_Employee_ProjectID.SelectedValuePath = "Project_Id";
            }

            //Load Speciality Data from Database
            DataTable dtSpec = EmployeeValidation.LoadSeciality_BL();
            if (dtSpec.Rows.Count >= 0)
            {
                cmb_Employee_Speciality.ItemsSource = dtSpec.DefaultView;

                cmb_Employee_Speciality.DisplayMemberPath = "Speciality_Name";
                cmb_Employee_Speciality.SelectedValuePath = "Speciality_Id";
            }

            //Load Skills Data from Database
            DataTable dtSkill = EmployeeValidation.LoadSkill_BL();
            if (dtSkill.Rows.Count >= 0)
            {
                cmb_Employee_SkillID.ItemsSource = dtSkill.DefaultView;

                cmb_Employee_SkillID.DisplayMemberPath = "Skill_Name";
                cmb_Employee_SkillID.SelectedValuePath = "Skill_Id";
            }

            //Load Category Data from Database
            DataTable dtCat = Skill_BL.LoadCatSkill_BL();
            if (dtCat.Rows.Count >= 0)
            {
                cmb_Category_ID.ItemsSource = dtCat.DefaultView;

                cmb_Category_ID.DisplayMemberPath = "Category_Name";
                cmb_Category_ID.SelectedValuePath = "Category_Id";
            }


        }

        //User Employee
        private void btn_Employee_Add_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                Employee newEmp = new Employee();
                CapgeminiDetails capgDet = new CapgeminiDetails();

                newEmp.FirstName = textBox_Employee_Firstname.Text;
                newEmp.MiddleName = textBox_Employee_Middlename.Text;
                newEmp.LastName = textBox_Employee_Lastname.Text;
                newEmp.BirthDate = Convert.ToDateTime(dtpkr_Employee_DOB.Text);
                newEmp.Age = Convert.ToInt32(textBox_Employee_Age.Text);
                if(rdb_Employee_Male.IsChecked == true)
                {
                    newEmp.Gender = Convert.ToString(rdb_Employee_Male.Content);
                }
                else if(rdb_Employee_Female.IsChecked==true)
                {
                    newEmp.Gender = Convert.ToString(rdb_Employee_Female.Content);
                }
                newEmp.CivilStatusId = int.Parse(cmb_Employee_CivilStatus.SelectedValue.ToString());
                newEmp.Religion = textBox_Employee_Religion.Text;
                newEmp.Citizenship = textBox_Employee_Citizenship.Text;
                newEmp.MobileNo = Convert.ToInt64(textBox_Employee_MobilNumber.Text);
                newEmp.HomePhoneNo = Convert.ToInt64(textBox_Employee_HomePhoneNumber.Text);
                newEmp.Address = textBox_Employee_Address.Text;
                newEmp.City = textBox_Employee_City.Text;
                newEmp.State = textBox_Employee_State.Text;
                newEmp.Pincode = Convert.ToInt64(textBox_Employee_Pincode.Text);
                newEmp.Country = textBox_Employee_Country.Text;
                newEmp.Project_Id = int.Parse(cmb_Employee_ProjectID.SelectedValue.ToString());
                newEmp.SkillId = cmb_Employee_SkillID.SelectedValue.ToString();
                newEmp.EducationalBackground = textBox_Employee_EduBg.Text;
                capgDet.EmployeeId = Convert.ToInt32(textBox_Employee_Id.Text);
                capgDet.Email = textBox_Employee_EmailID.Text;
                capgDet.LevelId = int.Parse(cmb_Employee_LevelID.SelectedValue.ToString());
                capgDet.DateHired = Convert.ToDateTime(dtpkr_Employee_DateHired.Text);
                capgDet.SpecialityId = int.Parse(cmb_Employee_Speciality.SelectedValue.ToString());

                int rowsAffected = EmployeeValidation.AddEmployee_BL(newEmp,capgDet);
                if (rowsAffected > 0)
                {
                    MessageBox.Show("Employee Added !!"); }
                else
                    MessageBox.Show("Error!!! Employee Record not Added");
            }
            catch (HRMSException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);

            }
        }

        private void btn_Employee_Update_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                Employee newEmp = new Employee();
                CapgeminiDetails capgDet = new CapgeminiDetails();

                newEmp.EmployeeId = Convert.ToInt32(textBox_Employee_Id.Text);
                newEmp.FirstName = textBox_Employee_Firstname.Text;
                newEmp.MiddleName = textBox_Employee_Middlename.Text;
                newEmp.LastName = textBox_Employee_Lastname.Text;
                newEmp.BirthDate = Convert.ToDateTime(dtpkr_Employee_DOB.Text);
                newEmp.Age = Convert.ToInt32(textBox_Employee_Age.Text);
                if (rdb_Employee_Male.IsChecked == true)
                {
                    newEmp.Gender = Convert.ToString(rdb_Employee_Male.Content);
                }
                else if (rdb_Employee_Female.IsChecked == true)
                {
                    newEmp.Gender = Convert.ToString(rdb_Employee_Female.Content);
                }
                newEmp.CivilStatusId = int.Parse(cmb_Employee_CivilStatus.SelectedValue.ToString());
                newEmp.Religion = textBox_Employee_Religion.Text;
                newEmp.Citizenship = textBox_Employee_Citizenship.Text;
                newEmp.MobileNo = Convert.ToInt64(textBox_Employee_MobilNumber.Text);
                newEmp.HomePhoneNo = Convert.ToInt64(textBox_Employee_HomePhoneNumber.Text);
                newEmp.Address = textBox_Employee_Address.Text;
                newEmp.City = textBox_Employee_City.Text;
                newEmp.State = textBox_Employee_State.Text;
                newEmp.Pincode = Convert.ToInt64(textBox_Employee_Pincode.Text);
                newEmp.Country = textBox_Employee_Country.Text;
                newEmp.Project_Id = int.Parse(cmb_Employee_ProjectID.SelectedValue.ToString());
                newEmp.SkillId = cmb_Employee_SkillID.SelectedValue.ToString();
                newEmp.EducationalBackground = textBox_Employee_EduBg.Text;
                capgDet.EmployeeId = Convert.ToInt32(textBox_Employee_Id.Text);
                capgDet.Email = textBox_Employee_EmailID.Text;
                capgDet.LevelId = int.Parse(cmb_Employee_LevelID.SelectedValue.ToString());
                capgDet.DateHired = Convert.ToDateTime(dtpkr_Employee_DateHired.Text);
                capgDet.SpecialityId = int.Parse(cmb_Employee_Speciality.SelectedValue.ToString());

                int rowsAffected = EmployeeValidation.UpdateEmployee_BL(newEmp, capgDet);
                if (rowsAffected > 0)
                {
                    MessageBox.Show("Employee Details Updated !!"); }
                else
                    MessageBox.Show("Error!!! Employee Record not Updated");
            }
            catch (HRMSException ex)
            {
                MessageBox.Show(ex.Message);

            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);

            }
        }

        private void btn_Employee_Delete_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                int empId = Convert.ToInt32(txt_SearchEmp.Text);

                int rowsAffected = EmployeeValidation.DeleteEmployee_BL(empId);
                if (rowsAffected > 0)
                {
                    
                    MessageBox.Show("Employee Details Deleted !!");
                }
                else MessageBox.Show("Error!!! Employee Record not found");
            }
            catch (HRMSException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void btn_Employee_Display_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                DataTable dtEmp = EmployeeValidation.DisplayEmployee_BL();
                dg_Employee_Details.ItemsSource = dtEmp.DefaultView;
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void btn_Employee_Reset_Click(object sender, RoutedEventArgs e)
        {
            textBox_Employee_Id.Text = EmployeeValidation.GetAutogeneratedEmployeeID_BL().ToString();
            textBox_Employee_Firstname.Clear();
            textBox_Employee_Middlename.Clear();
            textBox_Employee_Lastname.Clear();
            dtpkr_Employee_DOB.SelectedDate = null;
            textBox_Employee_Age.Clear();
            rdb_Employee_Male.IsChecked = false;
            rdb_Employee_Female.IsChecked = false;
            //cmb_Employee_CivilStatus.Items.Clear();
            textBox_Employee_Religion.Clear();
            textBox_Employee_Citizenship.Clear();
            textBox_Employee_MobilNumber.Clear();
            textBox_Employee_HomePhoneNumber.Clear();
            textBox_Employee_Address.Clear();
            textBox_Employee_City.Clear();
            textBox_Employee_State.Clear();
            textBox_Employee_Pincode.Clear();
            textBox_Employee_Country.Clear();
            //cmb_Employee_ProjectID.Items.Clear();
           // cmb_Employee_SkillID.Items.Clear();
            textBox_Employee_EduBg.Clear();
            textBox_Employee_EmailID.Clear();
            //cmb_Employee_LevelID.Items.Clear();
            dtpkr_Employee_DateHired.SelectedDate = null;
            //cmb_Employee_Speciality.Items.Clear();
        }

        private void btn_Employee_Search_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                int empId = Convert.ToInt32(txt_SearchEmp.Text);
                DataTable sEd = EmployeeValidation.SearchEmployeeById_BL(empId);

                DataRow dr = sEd.Rows[0];
                if (!dr.IsNull("Employee_Id"))
                {
                    textBox_Employee_Id.Text = dr["Employee_Id"].ToString();
                    textBox_Employee_Firstname.Text = dr["First_Name"].ToString();
                    textBox_Employee_Middlename.Text = dr["Middle_Name"].ToString();
                    textBox_Employee_Lastname.Text = dr["Last_Name"].ToString();
                    dtpkr_Employee_DOB.Text = dr["Birth_Date"].ToString();
                    textBox_Employee_Age.Text = dr["Age"].ToString();
                    if (dr["Gender"].ToString() == "Male")
                    {
                        rdb_Employee_Male.IsChecked = true;
                    }
                    else if (dr["Gender"].ToString() == "Female")
                    {
                        rdb_Employee_Female.IsChecked = true;
                    }
                    cmb_Employee_CivilStatus.SelectedValue = dr["Civil_Status"].ToString();
                    textBox_Employee_Religion.Text = dr["Religion"].ToString();
                    textBox_Employee_Citizenship.Text = dr["Citizenship"].ToString();
                    textBox_Employee_MobilNumber.Text = dr["Mobile_No"].ToString();
                    textBox_Employee_HomePhoneNumber.Text = dr["Home_Phone_No"].ToString();
                    textBox_Employee_Address.Text = dr["Address_"].ToString();
                    textBox_Employee_City.Text = dr["City"].ToString();
                    textBox_Employee_State.Text = dr["State_"].ToString();
                    textBox_Employee_Pincode.Text = dr["Pincode"].ToString();
                    textBox_Employee_Country.Text = dr["Country"].ToString();
                    cmb_Employee_ProjectID.SelectedValue = dr["Project_Id"].ToString();
                    cmb_Employee_SkillID.SelectedValue = dr["Skill_Id"].ToString();
                    textBox_Employee_EduBg.Text = dr["Educational_Background"].ToString();
                    textBox_Employee_EmailID.Text = dr["Email"].ToString();
                    cmb_Employee_LevelID.SelectedValue = dr["Level_Id"].ToString();
                    dtpkr_Employee_DateHired.Text = dr["Date_Hired"].ToString();
                    cmb_Employee_Speciality.SelectedValue = dr["Speciality_Id"].ToString();
                }
                else
                    MessageBox.Show("No Records found with Emp Id : " + empId);
            }
            catch(HRMSException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        //User Project
        private void btn_Project_Add_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                Project newProj = new Project();

                newProj.ProjectId = Convert.ToInt32(textBox_Project_ID.Text);
                newProj.ProjectName = textBox_Project_Name.Text;
                newProj.ProjectDescription = textBox_Project_Description.Text;
                newProj.ProjectClient = textBox_Project_Client.Text;
                newProj.ProjectStartDate = Convert.ToDateTime(dtpkr_Project_StartDate.Text);
                newProj.ProjectEndDate = Convert.ToDateTime(dtpkr_Project_EndDate.Text);

                int rowsAffected = Project_BL.AddProject_BL(newProj);
                if (rowsAffected > 0)
                {
                    MessageBox.Show("Project Added !!");
                }
                else
                    MessageBox.Show("Error!!! Project Record not Added");
            }
            catch (HRMSException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);

            }
        }

        private void btn_Project_Display_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                DataTable dtProj = Project_BL.DisplayProject_BL();
                dg_UserProject_Details.ItemsSource = dtProj.DefaultView;
            }
            catch(HRMSException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void btn_Project_Delete_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                int projId = Convert.ToInt32(txt_SrchProject.Text);

                int rowsAffected = Project_BL.DeleteProject_BL(projId);
                if (rowsAffected > 0)
                {

                    MessageBox.Show("Project Details Deleted !!");
                }
                else MessageBox.Show("Error!!! Project Record not found");
            }
            catch (HRMSException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void btn_Project_Update_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                Project newProj = new Project();

                newProj.ProjectId = Convert.ToInt32(textBox_Project_ID.Text);
                newProj.ProjectName = textBox_Project_Name.Text;
                newProj.ProjectDescription = textBox_Project_Description.Text;
                newProj.ProjectClient = textBox_Project_Client.Text;
                newProj.ProjectStartDate = Convert.ToDateTime(dtpkr_Project_StartDate.Text);
                newProj.ProjectEndDate = Convert.ToDateTime(dtpkr_Project_EndDate.Text);

                int rowsAffected = Project_BL.UpdateProject_BL(newProj);
                if (rowsAffected > 0)
                {
                    MessageBox.Show("Project Updated !!");
                }
                else
                    MessageBox.Show("Error!!! Project Record not Updated");
            }
            catch (HRMSException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);

            }
        }

        private void btn_Project_Reset_Click(object sender, RoutedEventArgs e)
        {
            textBox_Project_ID.Text = Project_BL.GetAutogeneratedProjectID_BL().ToString();
            txt_SrchProject.Clear();
            textBox_Project_Name.Clear();
            textBox_Project_Description.Clear();
            textBox_Project_Client.Clear();
            dtpkr_Project_StartDate.SelectedDate = null;
            dtpkr_Project_EndDate.SelectedDate = null ;
        }

        private void btn_Project_Search_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                int projId = Convert.ToInt32(txt_SrchProject.Text);
                DataTable sEd = Project_BL.SearchProjectById_BL(projId);

                DataRow dr = sEd.Rows[0];
                if (!dr.IsNull("Project_Id"))
                {
                    textBox_Project_ID.Text = dr["Project_Id"].ToString();
                    textBox_Project_Name.Text = dr["Project_Name"].ToString();
                    textBox_Project_Description.Text = dr["Project_Description"].ToString();
                    textBox_Project_Client.Text = dr["Project_Client"].ToString();
                    dtpkr_Project_StartDate.Text = dr["Project_Start_Date"].ToString();
                    dtpkr_Project_EndDate.Text = dr["Project_Start_Date"].ToString();
                }
                else
                    MessageBox.Show("No Records found with Project Id : " + projId);
            }
            catch (HRMSException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }


        //User Category
        private void btn_Category_Add_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                Category newCat = new Category();

                newCat.CategoryId = Convert.ToInt32(textBox_Category_ID.Text);
                newCat.CategoryName = textBox_Category_Name.Text;
                newCat.CategoryDescription = textBox_Category_Description.Text;

                int rowsAffected = Category_BL.AddCategory_BL(newCat);
                if (rowsAffected > 0)
                {
                    MessageBox.Show("Category Added !!");
                }
                else
                    MessageBox.Show("Error!!! Category Record not Added");
            }
            catch (HRMSException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void btn_Category_Display_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                DataTable dtCat = Category_BL.DisplayCategory_BL();
                dg_Category_Details.ItemsSource = dtCat.DefaultView;
            }
            catch (HRMSException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void btn_Category_Delete_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                int catId = Convert.ToInt32(textBox_SearchCategory.Text);

                int rowsAffected = Category_BL.DeleteCategory_BL(catId);
                if (rowsAffected > 0)
                {
                    MessageBox.Show("Category Details Deleted !!");
                }
                else MessageBox.Show("Error!!! Category Record not found");
            }
            catch (HRMSException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void btn_Category_Update_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                Category newCat = new Category();

                newCat.CategoryId = Convert.ToInt32(textBox_Category_ID.Text);
                newCat.CategoryName = textBox_Category_Name.Text;
                newCat.CategoryDescription = textBox_Category_Description.Text;

                int rowsAffected = Category_BL.UpdateCategory_BL(newCat);
                if (rowsAffected > 0)
                {
                    MessageBox.Show("Category Updated !!");
                }
                else
                    MessageBox.Show("Error!!! Category Record not Updated");
            }
            catch (HRMSException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);

            }
        }

        private void btn_Category_Reset_Click(object sender, RoutedEventArgs e)
        {
            textBox_Category_ID.Text = Category_BL.GetAutogeneratedCategoryID_BL().ToString();
            textBox_SearchCategory.Clear();
            textBox_Category_Name.Clear();
            textBox_Category_Description.Clear();
        }

        private void btn_Category_Search_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                int catId = Convert.ToInt32(textBox_SearchCategory.Text);
                DataTable sEd = Category_BL.SearchCategoryById_BL(catId);

                DataRow dr = sEd.Rows[0];
                if (!dr.IsNull("Category_Id"))
                {
                    textBox_Category_ID.Text = dr["Category_Id"].ToString();
                    textBox_Category_Name.Text = dr["Category_Name"].ToString();
                    textBox_Category_Description.Text = dr["Category_Description"].ToString();
                }
                else
                    MessageBox.Show("No Records found with Category Id : " + catId);
            }
            catch (HRMSException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        //User Skills
        private void btn_Skill_Add_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                Skill newSkill = new Skill();

                newSkill.SkillId = Convert.ToInt32(textBox_Skill_ID.Text);
                newSkill.SkillName = textBox_Skill_Name.Text;
                newSkill.SkillDescription = textBox_Skill_Description.Text;
                newSkill.CategoryId = int.Parse(cmb_Category_ID.SelectedValue.ToString());

                int rowsAffected = Skill_BL.AddSkill_BL(newSkill);
                if (rowsAffected > 0)
                {
                    MessageBox.Show("Skill Added !!");
                }
                else
                    MessageBox.Show("Error!!! Skill Record not Added");
            }
            catch (HRMSException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void btn_Skill_Display_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                DataTable dtSkill = Skill_BL.DisplaySkill_BL();
                dg_Skill_Details.ItemsSource = dtSkill.DefaultView;
            }
            catch (HRMSException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void btn_Skill_Delete_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                int skillId = Convert.ToInt32(textBox_SearchSkill.Text);

                int rowsAffected = Skill_BL.DeleteSkill_BL(skillId);
                if (rowsAffected > 0)
                {
                    MessageBox.Show("Skill Details Deleted !!");
                }
                else MessageBox.Show("Error!!! Skill Record not found");
            }
            catch (HRMSException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void btn_Skill_Update_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                Skill newSkill = new Skill();

                newSkill.SkillId = Convert.ToInt32(textBox_Skill_ID.Text);
                newSkill.SkillName = textBox_Skill_Name.Text;
                newSkill.SkillDescription = textBox_Skill_Description.Text;
                newSkill.CategoryId = int.Parse(cmb_Category_ID.SelectedValue.ToString());

                int rowsAffected = Skill_BL.UpdateSkill_BL(newSkill);
                if (rowsAffected > 0)
                {
                    MessageBox.Show("Skill Updated !!");
                }
                else
                    MessageBox.Show("Error!!! Skill Record not Updated");
            }
            catch (HRMSException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);

            }
        }

        private void btn_Skill_Reset_Click(object sender, RoutedEventArgs e)
        {
            textBox_Skill_ID.Text = Skill_BL.GetAutogeneratedSkillID_BL().ToString();
            textBox_SearchSkill.Clear();
            textBox_Skill_Name.Clear();
            textBox_Skill_Description.Clear();
        }

        private void btn_Skill_Search_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                int skillId = Convert.ToInt32(textBox_SearchSkill.Text);
                DataTable sEd = Skill_BL.SearchSkillById_BL(skillId);

                DataRow dr = sEd.Rows[0];
                if (!dr.IsNull("Skill_Id"))
                {
                    textBox_Skill_ID.Text = dr["Skill_Id"].ToString();
                    textBox_Skill_Name.Text = dr["Skill_Name"].ToString();
                    textBox_Skill_Description.Text = dr["Skill_Description"].ToString();
                    cmb_Category_ID.SelectedValue = dr["Category_Id"].ToString();
                }
                else
                    MessageBox.Show("No Records found with Skill Id : " + skillId);
            }
            catch (HRMSException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

    }
}
