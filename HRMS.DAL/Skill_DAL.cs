using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using HRMS.Entity;
using System.Data;
using System.Data.SqlClient;

namespace HRMS.DAL
{
    /// <summary>
    /// Employee ID :161585
    /// Employee Name : Viraj Dere
    /// Description : Handles Employee_Skills Specific operations
    /// Date of Creation : 10/23/2018
    /// </summary>
    public class Skill_DAL
    {
        //Function to get autogenerated Skill Id
        public static int GetAutoGeneratedSkillId()
        {
            int newSkillId;
            try
            {
                SqlConnection connObj = new SqlConnection(@"Data Source=ndamssql\sqlilearn;Initial Catalog=Sep19CHN;User ID=sqluser;Password=sqluser");
                SqlCommand cmdObj = new SqlCommand("select IDENT_CURRENT('Group4.Skill')+ident_incr('Group4.Skill')", connObj);
                connObj.Open();
                object objResult = cmdObj.ExecuteScalar();
                newSkillId = Convert.ToInt32(objResult);
                connObj.Close();// return single data - obj
            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return newSkillId;

        }

        //Method to Add Skill to Database
        public static int AddSkill(Skill newSkill)
        {
            int rowsAffected = 0;
            try
            {
                //Creating command object
                SqlCommand skillCommand = DataConnections.GenerateCommand();

                //Assigning command text
                skillCommand.CommandText = "Group4.usp_AddSkill";

                //Adding parameters to command
                skillCommand.Parameters.AddWithValue("@Skill_Name", newSkill.SkillName);
                skillCommand.Parameters.AddWithValue("@Skill_Description", newSkill.SkillDescription);
                skillCommand.Parameters.AddWithValue("@Category_Id", newSkill.CategoryId);
                //Executing command
                skillCommand.Connection.Open();
                rowsAffected = skillCommand.ExecuteNonQuery();
                skillCommand.Connection.Close();
            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return rowsAffected;
        }

        //Method to Delete Skill From Database
        public static int DeleteSkill(int catId)
        {
            int rowsAffected = 0;
            try
            {
                //Creating command object
                SqlCommand skillCommand = DataConnections.GenerateCommand();
                //Assigning command text

                skillCommand.CommandText = "Group4.usp_DeleteSkills";
                skillCommand.Parameters.AddWithValue("@Skill_Id", catId);

                skillCommand.Connection.Open();
                rowsAffected = skillCommand.ExecuteNonQuery();
                skillCommand.Connection.Close();
            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return rowsAffected;

        }

        //Method to Modify Skill From Database
        public static int UpdateSkill(Skill newSkill)
        {
            int rowsAffected = 0;
            try
            {
                //Creating command object
                SqlCommand skillCommand = DataConnections.GenerateCommand();
                //Assigning command text

                skillCommand.CommandText = "Group4.usp_UpdateSkill";
                skillCommand.Parameters.AddWithValue("@Skill_Id", newSkill.SkillId);
                skillCommand.Parameters.AddWithValue("@Skill_Name", newSkill.SkillName);
                skillCommand.Parameters.AddWithValue("@Skill_Description", newSkill.SkillDescription);
                skillCommand.Parameters.AddWithValue("@Category_Id", newSkill.CategoryId);
                skillCommand.Connection.Open();
                rowsAffected = skillCommand.ExecuteNonQuery();
                skillCommand.Connection.Close();
            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return rowsAffected;
        }

        //Method to Display Skill From Database
        public static DataTable DisplayAllSkills()
        {
            DataTable dtSkill;
            SqlDataReader skillReader = null;
            try
            {
                //Creating command object
                SqlCommand skillCommand = DataConnections.GenerateCommand();

                dtSkill = new DataTable();
                skillCommand.CommandText = "Group4.usp_DisplayAllSkills";
                skillCommand.Connection.Open();
                skillReader = skillCommand.ExecuteReader();
                if (skillReader.HasRows)
                {
                    dtSkill.Load(skillReader);
                }
                skillReader.Close();
                skillCommand.Connection.Close();
            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (Exception ex)
            {
                throw ex;
            }

            return dtSkill;
        }

        //Method to Search Skill From Database
        public static DataTable SearchSkillById(int skillId)
        {
            DataTable dtSkill;
            SqlDataReader skillReader = null;
            try
            {
                //Creating command object
                SqlCommand skillCommand = DataConnections.GenerateCommand();

                dtSkill = new DataTable(/*int skillId*/);
                skillCommand.CommandText = "Group4.usp_SearchSkills";
                skillCommand.Parameters.AddWithValue("@Skill_Id", skillId);
                skillCommand.Connection.Open();
                skillReader = skillCommand.ExecuteReader();
                if (skillReader.HasRows)
                {
                    dtSkill.Load(skillReader);
                }
                skillReader.Close();
                skillCommand.Connection.Close();
            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return dtSkill;
        }

        //Method to Display Categories from CategoryId
        public static DataTable LoadCategory()
        {
            DataTable dtCat;
            SqlDataReader catReader = null;
            try
            {
                //Creating command object
                SqlCommand skillCommand = DataConnections.GenerateCommand();

                dtCat = new DataTable();
                skillCommand.CommandText = "Group4.usp_DisplayAllCategories";
                skillCommand.Connection.Open();
                catReader = skillCommand.ExecuteReader();
                dtCat.Load(catReader);
                catReader.Close();
                skillCommand.Connection.Close();
            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return dtCat;
        }
    }
}
