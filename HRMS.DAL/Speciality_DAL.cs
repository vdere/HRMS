using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using HRMS.Entity;
using HRMS.Exceptions;

namespace HRMS.DAL
{
    public class Speciality_DAL
    {
        //Function to get autogenerated Speciality Id
        public static int GetAutoGeneratedSpecId()
        {
            int newSpecId;
            try
            {
                SqlConnection connObj = new SqlConnection(@"Data Source=ndamssql\sqlilearn;Initial Catalog=Sep19CHN;User ID=sqluser;Password=sqluser");
                SqlCommand cmdObj = new SqlCommand("select IDENT_CURRENT('Group4.Speciality')+ident_incr('Group4.Speciality')", connObj);
                connObj.Open();
                object objResult = cmdObj.ExecuteScalar();
                newSpecId = Convert.ToInt32(objResult);
                connObj.Close();// return single data - obj
            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return newSpecId;

        }

        //Method to Add Speciality to Database
        public static int AddSpeciality(Speciality newSpec)
        {
            int rowsAffected = 0;
            try
            {
                //Creating command object
                SqlCommand SpecCommand = DataConnections.GenerateCommand();

                //Assigning command text
                SpecCommand.CommandText = "Group4.usp_AddSpeciality";

                //Adding parameters to command
                SpecCommand.Parameters.AddWithValue("@Level_Description", newSpec.SpecialityName);


                //Executing command
                SpecCommand.Connection.Open();
                rowsAffected = SpecCommand.ExecuteNonQuery();
                SpecCommand.Connection.Close();
            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return rowsAffected;
        }

        //Method to Delete Speciality From Database
        public static int DeleteSpec(int specId)
        {
            int rowsAffected = 0;
            try
            {
                //Creating command object
                SqlCommand SpecCommand = DataConnections.GenerateCommand();
                //Assigning command text

                SpecCommand.CommandText = "Group4.usp_DeleteSpec";
                SpecCommand.Parameters.AddWithValue("@Speciality_Id", specId);

                SpecCommand.Connection.Open();
                rowsAffected = SpecCommand.ExecuteNonQuery();
                SpecCommand.Connection.Close();
            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return rowsAffected;

        }

        //Method to Modify Speciality From Database
        public static int UpdateSpec(Speciality newSpec)
        {
            int rowsAffected = 0;
            try
            {
                //Creating command object
                SqlCommand SpecCommand = DataConnections.GenerateCommand();
                //Assigning command text

                SpecCommand.CommandText = "Group4.usp_UpdateSpeciality";
                SpecCommand.Parameters.AddWithValue("@Speciality_Id", newSpec.SpecialityId);
                SpecCommand.Parameters.AddWithValue("@Speciality_Name", newSpec.SpecialityName);

                SpecCommand.Connection.Open();
                rowsAffected = SpecCommand.ExecuteNonQuery();
                SpecCommand.Connection.Close();
            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return rowsAffected;
        }

        //Method to Display Speciality From Database
        public static DataTable DisplayAllSpeciality()
        {
            DataTable dtSpec;
            SqlDataReader SpecReader = null;
            try
            {
                //Creating command object
                SqlCommand SpecCommand = DataConnections.GenerateCommand();

                dtSpec = new DataTable();
                SpecCommand.CommandText = "Group4.usp_DisplayAllSpec";
                SpecCommand.Connection.Open();
                SpecReader = SpecCommand.ExecuteReader();
                if (SpecReader.HasRows)
                {
                    dtSpec.Load(SpecReader);
                }
                SpecReader.Close();
                SpecCommand.Connection.Close();
            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (Exception ex)
            {
                throw ex;
            }

            return dtSpec;
        }

        //Method to Search Speciality From Database
        public static DataTable SearchSpecById(int SpecId)
        {
            DataTable dtSpec;
            SqlDataReader SpecReader = null;
            try
            {
                //Creating command object
                SqlCommand SpecCommand = DataConnections.GenerateCommand();

                dtSpec = new DataTable(/*int SpecId*/);
                SpecCommand.CommandText = "Group4.usp_SearchSpec";
                SpecCommand.Parameters.AddWithValue("@Speciality_Id", SpecId);
                SpecCommand.Connection.Open();
                SpecReader = SpecCommand.ExecuteReader();
                if (SpecReader.HasRows)
                {
                    dtSpec.Load(SpecReader);
                }
                SpecReader.Close();
                SpecCommand.Connection.Close();
            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return dtSpec;
        }
    }
}
