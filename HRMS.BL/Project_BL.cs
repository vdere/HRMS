using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using HRMS.Entity;
using HRMS.DAL;
using HRMS.Exceptions;
using System.Data;
using System.Data.SqlClient;
using System.Text.RegularExpressions;

namespace HRMS.BL
{
    /// <summary>
    /// CivilStatus ID :161611
    /// CivilStatus Name : Manish Rahangdale
    /// Description : Validate Project details  and call Project  operations methods in DAL
    /// Date of Creation : 01/11/2018
    /// </summary>
    /// 
    public class Project_BL
    {
        //Validation of Details
        public static bool ValidatProject(Project newProject)
        {

            bool isValidProject = true;
            StringBuilder sbError = new StringBuilder();
            try
            {
                if (newProject.ProjectName == string.Empty)
                {
                    isValidProject = false;
                    sbError.Append("Please Enter Project Name");
                }
                else if (!Regex.IsMatch(newProject.ProjectName, "^[0-9A-Za-z ]+$"))
                {
                    sbError.Append("Project Name should start with Capital Alphabet, it should have minimum 3 characters and only alphabets\n");
                    isValidProject = false;
                }
                if (newProject.ProjectDescription == string.Empty)
                {
                    isValidProject = false;
                    sbError.Append("Please Enter Project Description");
                }


                if (newProject.ProjectClient == string.Empty)
                {
                    isValidProject = false;
                    sbError.Append("Please Enter Project Description");
                }


                if (newProject.ProjectStartDate.ToString() == string.Empty)
                {
                    isValidProject = false;
                    sbError.Append("Please Enter Project Start Date  ");
                }

                if (newProject.ProjectEndDate.ToString() == string.Empty)
                {
                    isValidProject = false;
                    sbError.Append("Please Enter Project End Date  ");
                }
                else if (newProject.ProjectEndDate < DateTime.Now)
                {
                    isValidProject = false;
                    sbError.Append("Please Enter Project end Date greater than today's date ");
                }
                else if (newProject.ProjectEndDate < newProject.ProjectStartDate)
                {
                    isValidProject = false;
                    sbError.Append("Please Enter Project End Date greater than Start date ");
                }




                if (!isValidProject)
                    throw new HRMSException(sbError.ToString());
            }
            catch (HRMSException ex)
            {
                throw ex;
            }

            return isValidProject;
        }

        //Calling Add Project
        public static int AddProject_BL(Project newProject)
        {
            int rowsAffected = 0;
            try
            {
                if (ValidatProject(newProject))
                {
                    rowsAffected = Project_DAL.AddProject(newProject);
                }


            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (HRMSException ex)
            {
                throw ex;
            }
            return rowsAffected;
        }

        //Calling Update Project
        public static int UpdateProject_BL(Project newProject)
        {
            int rowsAffected = 0;
            try
            {
                if (ValidatProject(newProject))
                {
                    rowsAffected = Project_DAL.UpdateProject(newProject);
                }


            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (HRMSException ex)
            {
                throw ex;
            }
            return rowsAffected;
        }

        //Get Autogenerated ID
        public static int GetAutogeneratedProjectID_BL()
        {
            int Projectid = 0;
            try
            {


                Projectid = Project_DAL.GetAutoGeneratedProjectId();



            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (HRMSException ex)
            {
                throw ex;
            }
            return Projectid;
        }

        //Delete Project
        public static int DeleteProject_BL(int Projectid)
        {
            int rowsAffected = 0;
            try
            {


                rowsAffected = Project_DAL.DeleteProject(Projectid);



            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (HRMSException ex)
            {
                throw ex;
            }
            return rowsAffected;
        }

        //Search Project By Id
        public static DataTable SearchProjectById_BL(int Projectid)
        {
            DataTable Project = null;
            try
            {


                Project = Project_DAL.SearchProjectById(Projectid);



            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (HRMSException ex)
            {
                throw ex;
            }
            return Project;
        }

        //Dispaly All Project
        public static DataTable DisplayProject_BL()
        {
            DataTable Project = null;
            try
            {


                Project = Project_DAL.DisplayAllProjects();



            }
            catch (SqlException ex)
            {
                throw ex;
            }
            catch (HRMSException ex)
            {
                throw ex;
            }
            return Project;
        }
    }
}
